#include <LiquidCrystal.h>
const int pingPin = 9;
const int bzPin = 8;
const int red = 13;
const int green = 11;
const int blue = 12;

LiquidCrystal lcd(7,6,5,4,3,2);
int x=0;
int y=0;

void setup() {
  // initialize serial communication:
  Serial.begin(9600);
  lcd.begin(16,2);
  pinMode(red,OUTPUT);
  pinMode(green,OUTPUT);
  pinMode(blue,OUTPUT);
  pinMode(bzPin,OUTPUT);
  pinMode(pingPin,INPUT);
}

void loop() {
  // establish variables for duration of the ping, and the distance result
  // in inches and centimeters:
  long duration, inches, cm;
  // The PING))) is triggered by a HIGH pulse of 2 or more microseconds.
  // Give a short LOW pulse beforehand to ensure a clean HIGH pulse:
  pinMode(pingPin, OUTPUT);
  digitalWrite(pingPin, LOW);
  delayMicroseconds(2);
  digitalWrite(pingPin, HIGH);
  delayMicroseconds(5);
  digitalWrite(pingPin, LOW);

  // The same pin is used to read the signal from the PING))): a HIGH pulse
  // whose duration is the time (in microseconds) from the sending of the ping
  // to the reception of its echo off of an object.
  pinMode(pingPin, INPUT);
  duration = pulseIn(pingPin, HIGH);
  
  
  lcd.clear();
   
  x = 0.01723 * duration;
  y = (cm / 2.54);
   
  lcd.setCursor(0, 0);
  // print the number of seconds since reset:
  lcd.print("cm: ");
  lcd.setCursor(4,0);
  lcd.print(x);
   
  lcd.setCursor(0,1);
  lcd.print("inch: ");
  lcd.setCursor(6,1);
  lcd.print(y);
  
  // convert the time into a distance
  inches = microsecondsToInches(duration);
  cm = microsecondsToCentimeters(duration);
  
  if(inches<20){
    digitalWrite(red,HIGH);
    digitalWrite(blue,LOW);
    digitalWrite(green,LOW);
    tone(bzPin,600,70);
    delay(350);
  }
  if(inches>=20 && inches<35){
    digitalWrite(red,LOW);
    digitalWrite(blue,HIGH);
    digitalWrite(green,LOW);
    tone(bzPin,600,50);
    delay(900);
  }
  if(inches>=35){
    digitalWrite(red,LOW);
    digitalWrite(blue,LOW);
    digitalWrite(green,HIGH);
  }
}

long microsecondsToInches(long microseconds) {
  // According to Parallax's datasheet for the PING))), there are 73.746
  // microseconds per inch (i.e. sound travels at 1130 feet per second).
  // This gives the distance travelled by the ping, outbound and return,
  // so we divide by 2 to get the distance of the obstacle.
  // See: http://www.parallax.com/dl/docs/prod/acc/28015-PING-v1.3.pdf
  return microseconds / 74 / 2;
}

long microsecondsToCentimeters(long microseconds) {
  // The speed of sound is 340 m/s or 29 microseconds per centimeter.
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return microseconds / 29 / 2;
}
